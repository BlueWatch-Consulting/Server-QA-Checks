$script:qahelp['acc01']='<xml><description>Check all local users to ensure that no non-standard accounts exist.  Unless the server is not in a domain, there should be no additional user accounts.Example standard accounts include "ASPNET", "__VMware"</description><requiredinputs>IgnoreTheseUsers - List of know user or groups accounts to ignore!n</requiredinputs><pass>No additional local accounts exist!n</pass><fail>One or more local accounts exist!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['acc02']='<xml><description>Checks to see if the default local "Administrator" and "Guest" accounts have been renamed.</description><requiredinputs>InvalidAdminNames - List of names that should not be used!n</requiredinputs><pass>All local accounts have been renamed!n</pass><fail>A local account was found that needs to be renamed!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['acc03']='<xml><description>Check the local administrators group to ensure no non-standard accounts exist.If there is a specific application requirement for local administration access then these need to be well documented.</description><requiredinputs>IgnoreTheseUsers - List of know user or groups accounts to ignore!n</requiredinputs><pass>No local administrators found!n</pass><warning>This is a workgroup server, is this correct.?!n</warning><fail>One or more local administrator accounts exist!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['acc04']='<xml><description>Check all local groups and ensure no additional groups exist. If there is a specific application requirement for local groups then these need to be documented with a designated team specified as the owner.If you use specific role groups, make sure they are excluded in the settings file.</description><requiredinputs>IgnoreTheseUsers - List of known user or groups accounts to ignore!n</requiredinputs><pass>No additional local accounts!n</pass><fail>One or more local groups exist!n</fail><na>Server is a domain controller!n</na><applies>All Servers!n</applies></xml>'
$script:qahelp['acc05']='<xml><description>Checks all services to ensure no user accounts are assigned.If specific application service accounts are required then they should be domain level accounts (not local) and restricted from interactice access by policy.</description><requiredinputs>IgnoreTheseUsers - List of known user or groups accounts to ignore!n</requiredinputs><pass>No services found running under a local accounts!n</pass><fail>One or more services was found to be running under local accounts!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['acc06']='<xml><description>Checks to make sure that the guest user account has been disabled.  The guest account is located via the well known SID.</description><pass>Guest account is disabled!n</pass><fail>Guest account has not been disabled!n</fail><na>Guest account does not exist!n</na><applies>All Servers!n</applies></xml>'
$script:qahelp['acc07']='<xml><description>Checks the builtin group memberships to make sure specific users or groups are members.  If there is only one entry in "GroupMembers", then "AllMustExist" will be set to "TRUE".!nThis is check 1 of 3 that can be used to check different groups.</description><requiredinputs>AllMustExist - "True|False" - Do all group members need to exist for a "Pass"!nGroupMembers - List of users or groups that should listed as a member!nGroupName    - Local group name to check!n</requiredinputs><pass>No additional users exist!nAdditional users exist!n</pass><warning>Invalid group name!n</warning><fail>Additional users exist!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['acc08']='<xml><description>Checks the builtin group memberships to make sure specific users or groups are members.  If there is only one entry in "GroupMembers", then "AllMustExist" will be set to "TRUE".!nThis is check 2 of 3 that can be used to check different groups.</description><requiredinputs>AllMustExist - "True|False" - Do all group members need to exist for a "Pass"!nGroupMembers - List of users or groups that should listed as a member!nGroupName    - Local group name to check!n</requiredinputs><pass>No additional users exist!nAdditional users exist!n</pass><warning>Invalid group name!n</warning><fail>Additional users exist!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['acc09']='<xml><description>Checks the builtin group memberships to make sure specific users or groups are members.  If there is only one entry in "GroupMembers", then "AllMustExist" will be set to "TRUE".!nThis is check 3 of 3 that can be used to check different groups.</description><requiredinputs>AllMustExist - "True|False" - Do all group members need to exist for a "Pass"!nGroupMembers - List of users or groups that should listed as a member!nGroupName    - Local group name to check!n</requiredinputs><pass>No additional users exist!nAdditional users exist!n</pass><warning>Invalid group name!n</warning><fail>Additional users exist!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['com01']='<xml><description>Check that McAfee anti-virus is installed and virus definitions are up to date.</description><requiredinputs>MaximumDATAgeAllowed - Maximum number of days that DATs are allowed to be out of date|Integer!nProductName          - Full name of the McAfee product!nProductVersion       - Current version of the product that you are using|Decimal!n</requiredinputs><pass>McAfee product found, DATs are OK!n</pass><fail>McAfee product not found, install required!nDATs are not up-to-date!nNo DAT version found!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['com02']='<xml><description>Check relevant monitoring tool agent is installed and that the correct port is open to the management server.</description><requiredinputs>ProductNames - List of SCOM agent product names to search for!n</requiredinputs><pass>{product} found, Port {port} open to {server}!n</pass><fail>Monitoring software not found, install required!n{product} found, agent not configured with port and/or servername!n{product} found, port {port} not open to {server}!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['com03']='<xml><description>Check relevant SCCM agent process is running, and that the correct port is open to the management server.</description><pass>SCCM agent found, port {port} open to {server}!n</pass><fail>SCCM agent found, agent not configured with port and/or servername!nSCCM agent found, port {port} not open to {server}!nSCCM agent not found, install required!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['com04']='<xml><description>Check NetBackup agent is installed and that the correct port is open to the management server.Only applies to physical servers, or virtual servers with a list of known software installed.</description><requiredinputs>ProductName         - Full name of the product to look for!nRequiredServerRoles - List of known software to check if installed!n</requiredinputs><pass>{product} found, Port 1556 open to {server}!n</pass><fail>{product} not found!nPort 1556 not open to {server}!nBackup agent software not found, but this server has {role} installed which requires it!nBackup agent software not found, but this server is a domain controller which requires it!n</fail><manual>Is this server backed up via VADP.?  Manually check vCenter annotations, and look for "NetBackup.!n</manual><applies>All Servers!n</applies></xml>'
$script:qahelp['com05']='<xml><description>Check server is compliant with patch policy (must be patched to latest released patch level for this customer).Check date of last patch and return WARNING if not within specified number of days, and FAIL if not within number of days *2.</description><requiredinputs>MaximumLastPatchAgeAllowed - Mamimum number of days that patching is allowed to be out of date|Integer!n</requiredinputs><pass>Windows patches applied!n</pass><warning>Server not patched within the last {num} days!nOperating system not supported by check!n</warning><fail>Server not patched within the last {num} days!nNo last patch date - server has never been updated!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['com06']='<xml><description>Check that a WSUS server has been specified and that the correct port is open to the management server.</description><pass>WSUS server configured, port {port} open to {server}!n</pass><fail>WSUS server configured, port {port} not open to {server}!nWSUS server has not been configured!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['com07']='<xml><description>Check sentinel monitoring agent is installed, and that the correct port is open to the management server.</description><pass>Sentinel agent found, port {port} open to {server}!n</pass><fail>Sentinel agent found, port {port} not open to {server}!nSentinel agent not found, install required!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['com08']='<xml><description>Check BladeLogic monitoring agent is installed, and that the correct port is listening.Also check that the USERS.LOCAL file is configured correctly.</description><requiredinputs>ListeningPort - Port number that the agent listens on|Integer!nCustomerCode  - Customer name found in USERS.!n</requiredinputs><pass>BladeLogic agent found, and file confgiured!n</pass><fail>BladeLogic agent not found, install required!nRequired port not listening!nUSERS.LOCAL not configured!nUSERS.LOCAL not found!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['com09']='<xml><description>Check that Trend anti-virus is installed and virus definitions are up to date.</description><requiredinputs>MaximumDATAgeAllowed - Maximum number of days that DATs are allowed to be out of date|Integer!nProductName          - Full name of the Trend product!nProductVersion       - Current version of the product that you are using|Decimal!nDATPathLocation      - Full path location of the DAT location|File!n</requiredinputs><pass>Trend product found, DATs are OK!n</pass><fail>Trend product not found, install required!nDATs are not up-to-date!nNo DAT version found!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['com10']='<xml><description>Check to see if a list of software title are installed.</description><requiredinputs>ProductName - List of product names to check for.  Name should be the string found in install programs list (Add/Remove Programs / Programs And Features).!nAllMustExist - "True|False" - Should all entries exist for a Pass.?!n</requiredinputs><pass>All product titles were found!nOne or more product titles were found!n</pass><fail>One or more product titles were not found!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['com11']='<xml><description>Check that a specific list of services exist on the target server.  The friendly display name should be used.</description><requiredinputs>SerivcesToCheck - List of services to check.  Enter the display name of the service.!nAllMustExist    - "True|False" - Should all services exist for a Pass.?!n</requiredinputs><pass>All services were found!nOne or more services were found!n</pass><fail>One or more services were not found!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['com12']='<xml><description>Check that only one server role or feature is installed.  Several roles are ignored by default.</description><requiredinputs>IgnoreTheseRoles - List of additional roles to ignore (Use the Name, not the DisplayName)!n</requiredinputs><pass>One extra server role or feature installed!n</pass><fail>One or more extra server roles or features installed!n</fail><na>No extra server roles or features installed!n</na><applies>All Servers!n</applies></xml>'
$script:qahelp['drv01']='<xml><description>Check the system drive is a minimum size of 50gb for Windows 2008+ servers (some are reporting 49gb).</description><requiredinputs>MinimumSystemDriveSize - Minimum size of the system drive|Integer!n</requiredinputs><pass>System drive ({letter}) meets minimum required size!n</pass><fail>System drive ({letter}) is too small, should be {size}gb!n</fail><manual>Unable to get drive size, please check manually!n</manual><applies>All Servers!n</applies></xml>'
$script:qahelp['drv02']='<xml><description>Ensure all drives have a minimum amount of free space.  Measured as a percentage.</description><requiredinputs>IgnoreTheseDrives       - List of drive letters to ignore!nMinimumDrivePercentFree - Minimum free space available on each drive as a percentage|Integer!n</requiredinputs><pass>All drives have the required minimum free space of {size}%!n</pass><fail>One or more drives were found with less than {size}% free space!n</fail><manual>Unable to get drive information, please check manually!n</manual><applies>All Servers!n</applies></xml>'
$script:qahelp['drv03']='<xml><description>Check the page file is located on the system drive and is a fixed size.  The default setting is 4096MB (4GB).If the page file is larger a document detailing the tuning process used must exist and should follow Microsoft best tuning practices (http://support.microsoft.com/kb/2021748).</description><requiredinputs>FixedPageFileSize - Fixed size in MB of the page file|Integer!nPageFileLocation  - Drive location of the page file!n</requiredinputs><pass>Pagefile is set correctly!n</pass><fail>Pagefile is system managed!nPagefile is not set correctly!n</fail><manual>Unable to get page file information, please check manually!n</manual><applies>All Servers!n</applies></xml>'
$script:qahelp['drv04']='<xml><description>If a CD/DVD drive is present on the server confirm it is configured as "</description><requiredinputs>DVDDriveLetter - Drive letter of the CD/DVD drive!n</requiredinputs><pass>CD/DVD drive set correctly!n</pass><fail>CD/DVD drive found, but not configured as {letter}!n</fail><na>No CD/DVD drives found!n</na><applies>All Servers!n</applies></xml>'
$script:qahelp['drv05']='<xml><description>Check shared folders to ensure no additional shares are present.  Shared folders should be documented with a designated team specified as the owner.</description><requiredinputs>IgnoreTheseShares - List of share names that can be ignored!n</requiredinputs><pass>No additional shares found!n</pass><warning>Shared folders found, check against documentation!n</warning><applies>All Servers!n</applies></xml>'
$script:qahelp['drv06']='<xml><description>Where SAN storage is used, ensure multipathing software is installed and Dual Paths are present and functioning.This only checks that known software is installed.  A manual check must be done to ensure it is configured correctly.</description><requiredinputs>ProductNames - List of software to check if installed!n</requiredinputs><fail>SAN storage software not found, install required!n</fail><manual>{product} found!n</manual><na>Not a physical machine!n</na><applies>Physical Servers!n</applies></xml>'
$script:qahelp['drv07']='<xml><description>Check local disk array management agent is installed on the server.This only checks that known software is installed.  A manual check must be done to ensure it is configured correctly.</description><requiredinputs>ProductNames - List of sofware to check if installed!n</requiredinputs><fail>Disk management software not found, install required!n</fail><manual>{product} found!n</manual><na>Not a physical machine!n</na><applies>Physical Servers!n</applies></xml>'
$script:qahelp['drv08']='<xml><description>Ensure all drives are formatted as NTFS.</description><pass>All drives are formatted as NTFS!n</pass><fail>One or more drives were found not formatted as NTFS!n</fail><manual>Unable to get drive information, please check manually!n</manual><applies>All Servers!n</applies></xml>'
$script:qahelp['drv09']='<xml><description>Ensure all drives types are set to BASIC and with a partition style of MBR.</description><requiredinputs>IgnoreOffline - "True|False" - Ignore any drives that are marked as offline!n</requiredinputs><pass>All drive types are BASIC, with partition styles of MBR!n</pass><fail>One or more partition styles are not MBR!nOne or more drives types are not BASIC!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['hvh01']='<xml><description>Check Hyper-V is installed on Windows Server Core.</description><pass>Hyper-V is using Windows Server Core!n</pass><fail>Hyper-V is not using Windows Server Core!n</fail><na>Not a Hyper-V server!n</na><applies>Hyper-V Host Servers!n</applies></xml>'
$script:qahelp['hvh02']='<xml><description>Check Hyper-V is the only one installed.  See this list for IDs: https://msdn.microsoft.com/en-us/library/cc280268(v=vs.85).aspx</description><requiredinputs>IgnoreTheseRoleIDs - List of IDs that can be ignored|Integer!n</requiredinputs><pass>No extra server roles or features exist!n</pass><fail>One or more extra server roles or features exist!n</fail><na>Not a Hyper-V server!n</na><applies>Hyper-V Host Servers!n</applies></xml>'
$script:qahelp['hvh03']='<xml><description>Check all VMs are running from a non-system drive.</description><pass>No virtual machines are using the system drive!n</pass><fail>One or more virtual machines are using the system drive!n</fail><na>Not a Hyper-V server!nNo virtual machines exist on this host!n</na><applies>Hyper-V Host Servers!n</applies></xml>'
$script:qahelp['hvh04']='<xml><description>Check the version of the Integration Services installed on all VMs</description><pass>All VMs are up to date!n</pass><fail>One or more VMs are not up to date, or do not have the integration services installed!n</fail><na>No VMs are located on this host!nNot a Hyper-V server!n</na><applies>Hyper-V Host Servers!n</applies></xml>'
$script:qahelp['hvh05']='<xml><description>Check the network adapter jumbo frame setting.  Should be set to 9000 or more.</description><requiredinputs>IgnoreTheseAdapters - List of adapters to ignore this setting for!n</requiredinputs><pass>All network adapters configured correctly!n</pass><fail>One or more network adapters are not using Jumbo Frames!nNo network adapters found or enabled!n</fail><applies>Hyper-V Host Servers!n</applies></xml>'
$script:qahelp['hvh06']='<xml><description>Check that all Windows 2012+ VMs are built as generation 2 VMs</description><pass>All VMs are the correct generation type!n</pass><fail>One or more Windows 2012+ VMs are not generation 2 VMs!n</fail><na>No VMs are located on this host!nNot a Hyper-V server!n</na><applies>Hyper-V Host Servers!n</applies></xml>'
$script:qahelp['net01']='<xml><description>Check the global IPv6 setting and of status of each NIC.</description><requiredinputs>IPv6State - "Enabled|Disabled" - State of the IPv6 protocol for each network adapter!n</requiredinputs><applies>All Servers!n</applies></xml>'
$script:qahelp['net02']='<xml><description>Check there are no unused Network interfaces on the server.  We define "not in use" by showing any ENABLED NICs that are set to DHCP.All NICs should have a statically assigned IP address.</description><pass>No DHCP enabled adapters found!n</pass><fail>DHCP enabled adapters found!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['net03']='<xml><description>Check network interfaces are labelled so their purpose is easily identifiable.  FAIL if any adapter names are "Local Area Connection x" or "Ethernet x".</description><pass>All adapters renamed from default!n</pass><fail>An adapter was found with the default name!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['net04']='<xml><description>Check binding order is set correctly for "Production" as the primary network adapter then as applicable for other interfaces.If no "Production" adapter is found, then "Management" should be first.</description><requiredinputs>ManagementAdapterNames - List of names or partial names of Management network adapters!nProductionAdapterNames - List of names or partial names of Production network adapters!n</requiredinputs><pass>Binding order correctly set!n</pass><fail>No network adapters found!nProduction or management adapters not listed!nBinding order incorrect, {name} should be first!nRegistry setting not found!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['net05']='<xml><description>Check the network adapter speed and duplex settings.  Should be set to "Full Duplex" and "Auto".</description><pass>All network adapters configured correctly!n</pass><warning>One or more network adapters configured incorrectly!n</warning><fail>No network adapters found or enabled!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['net06']='<xml><description>Check local network management agent is installed on the server.  This only checks that known software is installed.</description><requiredinputs>ProductNames - List of software to check if installed!n</requiredinputs><pass>{product} found!n</pass><fail>Network management software not found, install required!n</fail><na>Not a physical machine!n</na><applies>Physical Servers!n</applies></xml>'
$script:qahelp['net07']='<xml><description>Check network interfaces for known teaming names, manually check they are configured correctly.  Fail if no teams found or if server is a virtual.  Checked configuration is:Teaming Mode: "Static Independent";  Load Balancing Mode: "Address Hash";  Standby Adapter: (set).</description><requiredinputs>NetworkTeamNames - List of network teaming adapters!n</requiredinputs><pass>Network team count: {number}!n</pass><fail>No teamed network adapter(s) found!nThere are no network teams configured on this server!nNative teaming enabled on virtual machine!nTeam configuration is not set correctly!n</fail><manual>Teamed network adpater(s) found, check they are configured correctly!n</manual><na>Not a physical server!nOperating system not supported!n</na><applies>Physical Servers!n</applies></xml>'
$script:qahelp['net08']='<xml><description>Check that a management network adapter exists.  This must always be present on a server and labelled correctly.</description><requiredinputs>ManagementAdapterNames - List of names or partial names of Management network adapters!n</requiredinputs><pass>Management network adapter found!n</pass><fail>No management network adapter!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['net09']='<xml><description>Checks to make sure the specified static routes have been added.  Add routes to check as: StaticRoute01 = ("source", "mask", "gateway").To check for no extra persistent routes, use: StaticRoute01 = ("None", "", "").  Up to 99 routes can be checked.You must edit the settings file manually for more than the currently configured.</description><requiredinputs>AllMustExist  - "True|False" - Should all static route entries exist for a Pass.?!nStaticRoute01 - List of IPs for a single static route to check.  Order is: Destination, Mask, Gateway|IPv4!nStaticRoute02 - List of IPs for a single static route to check.  Order is: Destination, Mask, Gateway|IPv4!nStaticRoute03 - List of IPs for a single static route to check.  Order is: Destination, Mask, Gateway|IPv4!nStaticRoute04 - List of IPs for a single static route to check.  Order is: Destination, Mask, Gateway|IPv4!nStaticRoute05 - List of IPs for a single static route to check.  Order is: Destination, Mask, Gateway|IPv4!nDestinationMustNotExist - Destination IP that must not exist in the route table|IPv4!n</requiredinputs><pass>Required static routes are present!n</pass><fail>One or more static routes are missing or incorrect!nAll entered static routes are missing!n</fail><na>No static routes to check!n</na><applies>All Servers!n</applies></xml>'
$script:qahelp['net10']='<xml><description>Check network interfaces have their power management switch disabled.</description><pass>All adapters have power saving disabled!n</pass><fail>One or more adapters have power saving enabled!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['net11']='<xml><description>Checks that all DNS servers are configured, and if required, in the right order.</description><requiredinputs>DNSServers    - List of DNS IP addresses that you want to check|IPv4!nOrderSpecific - "True|False" - Should the DNS order match exactly for a Pass.?  If the number of entries does not match the input list, this is set to "FALSE"!nAllMustExist  - "True|False" - Should all DNS entries exist for a Pass.?!n</requiredinputs><pass>All DNS servers configured (and in the right order)!n</pass><fail>DNS Server count mismatch!nMismatched DNS servers!nDNS Server list is not in the required order!nNo DNS servers are configured!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['net12']='<xml><description>Check that File And Print Services has been disabled on all adapters, except for those specified.</description><requiredinputs>IgnoreTheseAdapters - List of names or partial names of network adapters to ignore!n</requiredinputs><pass>File And Print Services are disabled correctly!n</pass><fail>File And Print Services are enabled!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['net13']='<xml><description>Check the WINS NetBIOS Settings for each enabled network adapter</description><requiredinputs>RequriedSetting - "0|1|2" - Each adapter should be set to this value!n</requiredinputs><pass>All adapters are configured correctly!n</pass><warning>No network adapters configured!n</warning><fail>One or more adapters are not configured correctly!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['reg01']='<xml><description>Check that the server time is correct.  If a valid source is used, the time is also checked against that source.Maximum time difference allowed is 10 seconds, any longer and the check fails.</description><pass>Time source is set to a remote server, and is syncronsized correctly!n</pass><fail>Time source is set to a remote server, and is not syncronsized correctly!nTime source is not set!nTime source is not set correctly!nError getting required information!n</fail><manual>Not a supported operating system for this check!n</manual><applies>All Servers!n</applies></xml>'
$script:qahelp['reg02']='<xml><description>Check that the server timezone is correct.  Default setting is "(GMT) Greenwich Mean Time</description><requiredinputs>TimeZoneNames - List of time zone strings to check against.  Different OS versions use different strings.!n</requiredinputs><pass>Server timezone set correctly!n</pass><fail>Server timezone is incorrect and should be set to {string}!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['reg03']='<xml><description>Ensure the Region and Language > Location is set correctly.  Default setting is "United Kingdom".</description><requiredinputs>DefaultLocation - Regional string name!n</requiredinputs><pass>Regional location set correctly!n</pass><fail>Regional location incorrectly set to {string}!nRegistry setting not found!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['reg04']='<xml><description>Ensure the Region and Language > keyboard and Languages is set correctly.  Default setting is "English (United Kingdom)".</description><requiredinputs>DefaultLanguage - Numerical value of the correct keyboard to use!n</requiredinputs><pass>Keyboard layout is set correctly!n</pass><fail>Keyboard layout is not set correctly!nRegistry setting not found!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['sec01']='<xml><description>Ensure security ciphers are set correctly.  Settings taken from https://www.nartac.com/Products/IISCrypto/Default.aspx using "Best Practices/FIPS 140-2" settings.</description><requiredinputs>EnabledCiphers  - List of Ciphers that should be enabled!nDisabledCiphers - List of Ciphers that should be disabled!n</requiredinputs><pass>All ciphers set correctly!n</pass><fail>One or more ciphers set incorrectly!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['sec02']='<xml><description>Ensure hashes are set correctly.  Settings taken from https://www.nartac.com/Products/IISCrypto/Default.aspx using "Best Practices/FIPS 140-2" settings.</description><requiredinputs>EnabledHashes  - List of hashes that should be enabled!nDisabledHashes - List of hashes that should be disabled!n</requiredinputs><pass>All hashes set correctly!n</pass><fail>One or more hashes set incorrectly!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['sec03']='<xml><description>Ensure key exchange algorithms are set correctly.  Settings taken from https://www.nartac.com/Products/IISCrypto/Default.aspx using "Best Practices/FIPS 140-2" settings.</description><requiredinputs>KeyExchangeAlgorithms - List of Key Exchange Algorithms that should be used!n</requiredinputs><pass>All key exchange algorithms set correctly!n</pass><fail>One or more key exchange algorithms set incorrectly!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['sec04']='<xml><description>Ensure protocols are set correctly.  Settings taken from https://www.nartac.com/Products/IISCrypto/Default.aspx using "Best Practices/FIPS 140-2" settings.</description><requiredinputs>DisabledProtocols - List of protocols that should be disabled!n</requiredinputs><pass>All protocols set correctly!n</pass><fail>One or more protocols set incorrectly!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['sec05']='<xml><description>Ensure the security cipher order is set correctly.  Settings taken from https://www.nartac.com/Products/IISCrypto/Default.aspx using "Best Practices/FIPS 140-2" settings.</description><requiredinputs>CipherSuiteOrder - "LARGE" - Single comma seperated string list of cipher suites in the order that they should be used in!n</requiredinputs><pass>Cipher suite order set correctly!n</pass><fail>Cipher suite order not set correctly!nCipher suite order set to the default value!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['sec06']='<xml><description>Ensure the system is set to reject attempts to enumerate accounts in the SAM by anonymous users.</description><pass>Reject annonymous account enumeration is enabled!n</pass><fail>Reject annonymous account enumeration is disabled!nRegistry setting not found!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['sec07']='<xml><description>Ensure the system is set to reject attempts to enumerate shares in the SAM by anonymous users.</description><pass>Reject annonymous share enumeration is enabled!n</pass><fail>Reject annonymous share enumeration is disabled!nRegistry setting not found!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['sec08']='<xml><description>Check system is not caching domain credentials.</description><pass>Domain credential caching is disabled!n</pass><fail>Domain credential caching is enabled!nRegistry setting not found!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['sec09']='<xml><description>Ensure the system is set to request administrative credentials before granting an application elevated privileges.Default setting is either "(1):Prompt for credentials on the secure desktop" or "(3):Prompt for credentials"Values and meanings can be seen here - https://msdn.microsoft.com/en-us/library/cc232761.aspx</description><requiredinputs>ElevatePromptForAdminCredentials - "0,1,2,3,4,5" - List of settings to check for!n</requiredinputs><pass>System is configured correctly!n</pass><fail>System is not configured correctly!nRegistry setting not found!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['sec10']='<xml><description>Ensure the system is set to restrict anonymous access to named pipes</description><pass>Restrict annonymous pipe/share access is enabled!n</pass><fail>Restrict annonymous pipe/share access is disabled!nRegistry setting not found!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['sec11']='<xml><description>Checks to see if the default webpage is present in IIS, it should be removed.</description><pass>IIS Installed, "iisstart.htm" not listed in default documents!n</pass><fail>IIS Installed, default document "iisstart.htm" configured!n</fail><na>IIS not Installed!n</na><applies>All Servers!n</applies></xml>'
$script:qahelp['sec12']='<xml><description>Ensure SMB signing is turned on.</description><pass>SMB Signing configured correctly!n</pass><fail>SMB Signing not configured correctly!nRegistry setting not found!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['sec13']='<xml><description>If server is Domain Controller or a Terminal Server ensure RSA authentication manager is installed and PIN is required to access server.</description><requiredinputs>ProductNames - List of product names to search for!n</requiredinputs><pass>{product} found!n</pass><fail>RSA software not found!n</fail><na>Not a domain controller or terminal services server!n</na><applies>Domain Controllers!nTerminal Servers!n</applies></xml>'
$script:qahelp['sec14']='<xml><description>Checks to see if there are any addional firewall rules, and warns if there are any.  This ignores all default pre-configured rules, and netbackup ports rules (1556, 13724).</description><requiredinputs>IgnoreTheseFirewallAppRules - List of known firewall rules to ignore!n</requiredinputs><pass>No additional firewall rules exist!n</pass><warning>One or more additional firewall rules exist, check they are required!n</warning><applies>All Servers!n</applies></xml>'
$script:qahelp['sec15']='<xml><description>Check if Windows firewall is enabled or disabled for each of the three profiles.  Set to "0" for off, and "1" for on</description><requiredinputs>DomainProfile   - "0|1" - Domain firewall state (enabled / disabled)!nPublicProfile   - "0|1" - Public firewall state (enabled / disabled)!nStandardProfile - "0|1" - Standard (Home) firewall state (enabled / disabled)!n</requiredinputs><pass>Windows firewall is set correctly!n</pass><fail>Windows firewall is not set correctly!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['sec16']='<xml><description>Returns a list of ports that are open, excluding anything lower than 1024 and within the dynamic port range.  Will also exclude other well known ports.!n</description><requiredinputs>IgnoreThesePorts - List of port numbers to ignore|Integer!n</requiredinputs><pass>No extra ports are open!n</pass><fail>One or more extra ports are open!n</fail><na>This check is for local servers only!n</na><applies>All Servers!n</applies></xml>'
$script:qahelp['sec17']='<xml><description>Ensure SMBv1 is disabled.</description><pass>SMBv1 is disabled!n</pass><fail>SMBv1 is enabled!nRegistry setting not found!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['sys01']='<xml><description>Check for a pending reboot.</description><pass>Server is not waiting for a reboot!n</pass><fail>Server is waiting for a reboot!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['sys02']='<xml><description>Check windows is licensed.</description><pass>Windows is licenced, Port 1688 open to KMS Server {server}!n</pass><fail>Windows is licenced, Port 1688 not open to KMS Server {server}!nWindows licence check failed!nWindows not licenced!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['sys03']='<xml><description>Check services and ensure all services set to start automatically are running (NetBackup Bare Metal Restore Boot Server,NetBackup SAN Client Fibre Transport Service and .NET4.0 are all expected to be Automatic but not running).</description><requiredinputs>IgnoreTheseServices - List of known services that can ignored when set to automatic and not started!n</requiredinputs><pass>All auto-start services are running!n</pass><fail>An auto-start service was found not running!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['sys04']='<xml><description>Check services and ensure all listed services are set to disabled and are stopped.</description><requiredinputs>CheckTheseServices - List of known serivces that should be in a disabled state!n</requiredinputs><pass>All services are configured correctly!n</pass><fail>One or more services are configured incorrectly!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['sys05']='<xml><description>Check System Event Log and ensure no errors are present in the last x days.  If found, will return the latest y entries</description><requiredinputs>EventLogMaxSize       - Maximum size in MB of this event log (default is 16)!nEventLogRetentionType - "Overwrite|Archive|Manual" - When the maximum log size is reached!nGetLatestEntriesAge   - Return all entries for this number of days|Integer!nGetLatestEntriesCount - Return this number of entries|Integer!n</requiredinputs><pass>No errors found in system event log!n</pass><warning>Errors were found in the system event log!n</warning><applies>All Servers!n</applies></xml>'
$script:qahelp['sys06']='<xml><description>Check Application Event Log and ensure no errors are present in the last x days.  If found, will return the latest y entries</description><requiredinputs>EventLogMaxSize       - Maximum size in MB of this event log (default is 16)!nEventLogRetentionType - "Overwrite|Archive|Manual" - When the maximum log size is reached!nGetLatestEntriesAge   - Return all entries for this number of days|Integer!nGetLatestEntriesCount - Return this number of entries|Integer!n</requiredinputs><pass>No errors found in application event log!n</pass><warning>Errors were found in the application event log!n</warning><applies>All Servers!n</applies></xml>'
$script:qahelp['sys07']='<xml><description>Checks Device Manager to ensure there are no unknown devices, conflicts or errors.</description><requiredinputs>IgnoreTheseDeviceNames - List of known devices that can be ignored!n</requiredinputs><pass>No disabled devices or device errors found!n</pass><warning>Disabled devices found!n</warning><fail>Device errors found!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['sys08']='<xml><description>Check a custom event log and ensure no errors are present in the last x days.  If found, will return the latest y entries.To get the exact name of the log, view its properties and see the "Exact Name" entry.</description><requiredinputs>EventLogName          - List of names of the event logs to search. Examples include: Directory Service, DNS Server, Windows PowerShell.!nGetLatestEntriesAge   - Return all entries for this number of days|Integer!nGetLatestEntriesCount - Return this number of entries|Integer!n</requiredinputs><pass>No errors found in the selected event logs!n</pass><warning>Errors were found in the following event logs!n</warning><fail>Errors were found in the following event logs!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['sys09']='<xml><description>Check to see if any non standard scheduled tasks exist on  the server (Any application specific scheduled tasks should be documented with a designated contact point specified).This check automatically ignores any Microsoft labelled specific tasks.</description><requiredinputs>IgnoreTheseScheduledTasks - List of scheduled tasks that can be ignored!n</requiredinputs><pass>No additional scheduled tasks found!n</pass><warning>Additional scheduled tasks found - make sure these are documented!n</warning><applies>All Servers!n</applies></xml>'
$script:qahelp['sys10']='<xml><description>Check to see if any printers exist on the server. If printers exist, ensure the spooler directory is not stored on the system drive.</description><requiredinputs>IgnoreThesePrinterNames - List of known printer names to ignore!n</requiredinputs><pass>Printers found, and spool directory is not set to default path!n</pass><fail>Spool directory is set to the default path and needs to be changed, Registry setting not found!n</fail><na>No printers found!nPrint Spooler service is not running!n</na><applies>All Servers!n</applies></xml>'
$script:qahelp['sys11']='<xml><description>Ensure autorun is disabled.</description><pass>Autorun is disabled!n</pass><fail>Autorun is enabled!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['sys12']='<xml><description>Check if SNMP role is install on the server.  If so, ensure the SNMP community strings follow the secure password policy.</description><pass>SNMP Service installed, but disabled!n</pass><fail>SNMP Service installed, no communities configured!n</fail><manual>SNMP Service installed, communities listed!n</manual><na>SNMP Service not installed!n</na><applies>All Servers!n</applies></xml>'
$script:qahelp['sys13']='<xml><description>Checks that the server is a member of the domain.</description><pass>Server is a domain member!n</pass><warning>This is a workgroup server, is this correct.?!n</warning><applies>All Servers!n</applies></xml>'
$script:qahelp['sys14']='<xml><description>Check power plan is set to High Performance.</description><pass>Power plan is set correctly!n</pass><fail>Power plan is not set correctly!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['sys15']='<xml><description>Check hibernation is turned off.</description><pass>Hibernation is currently disabled!n</pass><fail>Hibernation is currently enabled!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['sys16']='<xml><description>Check that remote desktop is enabled and that Network Level Authentication (NLA) is set.</description><pass>Secure remote desktop and NLA enabled!n</pass><warning>Network Level Authentication is not set!n</warning><fail>Secure remote desktop disabled!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['sys17']='<xml><description>If server is a Terminal Services Server ensure it has a licence server set.</description><pass>Terminal services server is licenced!n</pass><fail>Terminal services server is not licenced!n</fail><na>Not a terminal services server!n</na><applies>All Servers!n</applies></xml>'
$script:qahelp['sys18']='<xml><description>Check that the current server OU path is not in the default location(s).  The list of OUs should contain at least the default "Computers" OU, and must be the full distinguished name of the locations.</description><requiredinputs>NoInTheseOUs - List of full-path OU names that the servers should not be located in.!n</requiredinputs><pass>Server not in default location!n</pass><fail>Server is in default location!n</fail><na>Not a domain joined server!n</na><applies>All Servers!n</applies></xml>'
$script:qahelp['sys19']='<xml><description>Check the state of the HPe System Management Homepage service and version</description><requiredinputs>MinimumVersion - Minimum installed version number allowed|Decimal!nServiceState   - "Automatic|Manual|Disabled" - Default state of the service!n</requiredinputs><pass>Service state and version are correct!n</pass><fail>Service state is not correct!nInstalled version is below the minimum set!nHPe SMH not installed!n</fail><na>Not a HPe physical server!n</na><applies>All HPe Physical Servers!n</applies></xml>'
$script:qahelp['sys20']='<xml><description>Check the state of the Dell OpenManage Administrator service and version</description><requiredinputs>MinimumVersion - Minimum installed version number allowed|Decimal!nServiceState   - "Automatic|Manual|Disabled" - Default state of the service!n</requiredinputs><pass>Service state and version are correct!n</pass><fail>Service state is not correct!nInstalled version is below the minimum set!nDell OMA not installed!n</fail><na>Not a Dell physical server!n</na><applies>All Dell Physical Servers!n</applies></xml>'
$script:qahelp['sys21']='<xml><description>Allows you to checks a specific list of registry keys and values to see if your in-house gold image was used.Up to three registry keys and values can be checked.  Note: All keys must be in HKEY_LOCAL_MACHINE only</description><requiredinputs>Registry1Key   - "LARGE" - Full path and name of a registry value to check.  "HKEY_LOCAL_MACHINE\" is automatically added.!nRegistry1Value - Minimum value or string required for the registry value.  Enter "Report Only" to just show the value.!nRegistry2Key   - "LARGE" - Full path and name of a registry value to check.  "HKEY_LOCAL_MACHINE\" is automatically added.!nRegistry2Value - Minimum value or string required for the registry value.  Enter "Report Only" to just show the value.!nRegistry3Key   - "LARGE" - Full path and name of a registry value to check.  "HKEY_LOCAL_MACHINE\" is automatically added.!nRegistry3Value - Minimum value or string required for the registry value.  Enter "Report Only" to just show the value.!n</requiredinputs><pass>All gold build checks were found and correct!n</pass><fail>One or more gold build checks were below specified value!n</fail><manual>One or more gold build checks were "Report Only"!n</manual><applies>All Servers!n</applies></xml>'
$script:qahelp['sys22']='<xml><description>Check that all the memory assigned to a server is visible to the OS.</description><pass>All assigned memory is visible!n</pass><fail>Not all assigned memory is visible!n</fail><applies>All Servers!n</applies></xml>'
$script:qahelp['vmw01']='<xml><description>Check that the latest VMware tools or Microsoft integration services are installed.</description><pass>VMware tools are up to date!n</pass><fail>Integration services not installed!nVMware tools can be upgraded!n</fail><manual>Integration services found!nUnable to check the VMware Tools upgrade status!n</manual><na>Not a virtual machine!n</na><applies>Virtual Servers!n</applies></xml>'
$script:qahelp['vmw02']='<xml><description>Check that VMware Host Time Sync is disabled.</description><pass>VMware tools time sync is disabled!n</pass><fail>VMware tools time sync is enabled!n</fail><manual>Unable to check the VMware time sync status!n</manual><na>Not a virtual machine!n</na><applies>Virtual Servers!n</applies></xml>'
$script:qahelp['vmw03']='<xml><description>Check all virtual servers have network cards that are configured as VMXNET3.</description><pass>All active NICS configured correctly!n</pass><warning>No network adapters found!n</warning><fail>One or more active NICs were found not to be VMXNET3!n</fail><na>Not a virtual machine!n</na><applies>Virtual Servers!n</applies></xml>'
$script:qahelp['vmw04']='<xml><description>Check Windows disk controller is set correctly.  Default setting is "LSI logic SAS".</description><requiredinputs>DiskControllerDeviceType   - VMware ESX default disk controller name!nIgnoreTheseControllerTypes - List of controller types to ignore!n</requiredinputs><pass>Disk controller set correctly!n</pass><fail>No SCSI controllers found!nDisk controller not set correctly!n</fail><na>Not a virtual machine!n</na><applies>Virtual Servers!n</applies></xml>'
$script:qahelp['vmw05']='<xml><description>Checks to see if there are are more than 8 drives attached to the same SCSI adapter.</description><pass>More than 7 drives exist, but on different SCSI adapters!n</pass><fail>More than 7 drives exist on one SCSI adapter!n</fail><na>Not a virtual machine!nThere are less than 8 drives attached to server!n</na><applies>Virtual Servers!n</applies></xml>'
$script:qahelp['vmw06']='<xml><description>Checks to see if the total VM size is less than 1TB.</description><pass>VM is smaller than 1TB!n</pass><warning>VM is larger than 1TB.  Make sure there is an engineering exception in place for this!n</warning><na>Not a virtual machine!n</na><applies>Virtual Servers!n</applies></xml>'
$script:qahelp['vmw07']='<xml><description>Checks for any mounted CD/DVD or floppy drives.</description><pass>No CD/ROM or floppy drives are mounted!n</pass><fail>One or more CD/ROM or floppy drives are mounted!n</fail><na>Not a virtual machine!n</na><applies>Virtual Servers!n</applies></xml>'
$script:qahelp['vmw08']='<xml><description>Check that Failover Clustering is not be installed on virtual servers.</description><pass>Failover clustering is not installed!n</pass><fail>Failover clustering is installed!n</fail><na>Not a virtual server!n</na><applies>Virtual Servers!n</applies></xml>'

